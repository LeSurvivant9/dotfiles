### ZINIT
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"
###

# ——— NVM (auto-switch via plugin) ———
export NVM_AUTO_USE=true

# Add zsh plugins
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light Aloxaf/fzf-tab
zinit load atuinsh/atuin

# Add in snippets (Linux-compatible only)
zinit snippet OMZP::bun
zinit snippet OMZP::colorize
zinit snippet OMZP::command-not-found
zinit snippet OMZP::common-aliases
zinit snippet OMZP::composer
zinit snippet OMZP::copypath
zinit snippet OMZP::docker
zinit snippet OMZP::docker-compose
zinit snippet OMZP::dotenv
zinit snippet OMZP::fzf
zinit snippet OMZL::git.zsh
zinit snippet OMZP::git
zinit snippet OMZP::nvm
zinit snippet OMZP::postgres
zinit snippet OMZP::python
zinit snippet OMZP::safe-paste
zinit snippet OMZP::ssh
zinit snippet OMZP::symfony

# Keybindings
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward

# Load completions
autoload -U compinit && compinit

zinit cdreplay -q

# History
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Completion styling
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'

# Aliases
alias ls='ls --color'
alias vim='nvim'
alias c='clear'
alias l='ls -lFha'

# Shell integrations
eval "$(starship init zsh)"

# Homebrew (Linuxbrew) integration
if [ -d "/home/linuxbrew/.linuxbrew/bin" ]; then
    export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"
    export MANPATH="/home/linuxbrew/.linuxbrew/share/man:$MANPATH"
    export INFOPATH="/home/linuxbrew/.linuxbrew/share/info:$INFOPATH"
fi

# fzf
if command -v fzf >/dev/null 2>&1; then
    # Charge les complétions et keybindings si le fichier existe
    [ -f /usr/share/doc/fzf/examples/key-bindings.zsh ] && source /usr/share/doc/fzf/examples/key-bindings.zsh
    [ -f /usr/share/doc/fzf/examples/completion.zsh ] && source /usr/share/doc/fzf/examples/completion.zsh
fi

# Atuín
if command -v atuin >/dev/null 2>&1; then
    eval "$(atuin init zsh)"
fi

# Symfony
if command -v symfony >/dev/null 2>&1; then
    # Autocomplétion Symfony CLI
    [[ -f "$HOME/.symfony_completion" ]] || symfony completion zsh > "$HOME/.symfony_completion"
    source "$HOME/.symfony_completion"
fi

# Bun (local install)
if [ -d "${BUN_INSTALL:-$HOME/.bun}/bin" ]; then
  export PATH="${BUN_INSTALL:-$HOME/.bun}/bin:$PATH"
fi

export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
